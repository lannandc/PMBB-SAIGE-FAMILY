params {
    // default assumes use of the docker container
    my_python = "/usr/bin/python3"
    // my_python = "/home/guarelin/mambaforge/envs/py311/bin/python"
    // my_python = "/home/rodrigzb/mambaforge/envs/bioinformatics/bin/python"

    data_csv = "/project/pmbb_codeworks/datasets/CodeWorks_Test_Data/cleaned_phewas_pheno_covars.csv"
    cohort_sets = "/project/pmbb_codeworks/datasets/PMBB_Extra/Sample_Lists/Exome_sample_table.csv"
    // Set the sex_specific pheno list file to null (lowercase) if not needed
    sex_specific_pheno_file = "/project/pmbb_codeworks/datasets/pmbb_allwas_pheno/phecode_sex_specific.txt"

    // binary and quantitative phenotype lists
    bin_pheno_list_file = "/project/pmbb_codeworks/datasets/CodeWorks_Test_Data/phecode_list_with_prefix.txt"
    // bin_pheno_list_file = "/project/pmbb_codeworks/projects/SAIGE_FAMILY_TESTING/SAIGE_Gene_PheWAS/test_20_phecodes.txt"
    quant_pheno_list_file = "/project/pmbb_codeworks/datasets/PMBB_Extra/PheCodes_2.3/lab_list.txt"
    gene_list_file = "/project/pmbb_codeworks/projects/BSN_2.0/SAIGE_FAMILY/BSN.txt"
    pheno_descriptions_file = "/project/pmbb_codeworks/datasets/Ontology_Things/phecode_descriptions_categories.csv"

    // ID column label
    id_col = "PMBB_ID"

    // list of cohorts (usually ancestry-stratified)
    cohort_list = [
        "AFR_ALL","AFR_F","AFR_M",
        "AMR_ALL","AMR_F","AMR_M",
        "EAS_ALL", "EAS_F", "EAS_M",
        "EUR_ALL", "EUR_F", "EUR_M",
        "SAS_ALL", "SAS_F", "SAS_M",
        ]

    sex_strat_cohort_list = [
        "AFR_F","AFR_M",
        "AMR_M","AMR_F",
        "EAS_F", "EAS_M",
        "EUR_F", "EUR_M",
        "SAS_F", "SAS_M"
        ]

    // lists of smaller cohorts used for testing
    // cohort_list = ["EUR_ALL", "EUR_F", "EUR_M"]
    // sex_strat_cohort_list = ["EUR_F", "EUR_M"]

    // categorical and continuous covariates
    cat_covars = ["SEX"]
    cont_covars = ["DATA_FREEZE_AGE", "Exome_PC1", "Exome_PC2", "Exome_PC3", "Exome_PC4"]

    sex_strat_cat_covars = []
    sex_strat_cont_covars = cont_covars
    
    // list of chromosomes
    // 3 = BSN
    chromosome_list = ["3"]

    // default paths assume use of the docker container
    step1_script = "/usr/local/bin/step1_fitNULLGLMM.R"
    step2_script = "/usr/local/bin/step2_SPAtests.R"

    // step 1 path should be the small subset of markers used to fit the GRM
    use_sparse_GRM = false
    step1_plink_prefix = "/project/pmbb_codeworks/datasets/PMBB_Extra/SAIGE_Step0_Exome/input/PMBB_exome_random_autosomal_markers"
    step1_sparse_grm = "/project/pmbb_codeworks/datasets/PMBB_Extra/SAIGE_Step0_Exome/output/PMBB_relatednessCutoff_0.125_2000_randomMarkersUsed.sparseGRM.mtx"
    step1_sparse_grm_samples = "/project/pmbb_codeworks/datasets/PMBB_Extra/SAIGE_Step0_Exome/output/PMBB_relatednessCutoff_0.125_2000_randomMarkersUsed.sparseGRM.mtx.sampleIDs.txt"

    // exome_plink_prefix = "/project/PMBB/PMBB-Release-2020-2.0/Exome/pVCF/all_variants/PMBB-Release-2020-2.0_genetic_exome_GL"
    exome_plink_prefix = "/project/pmbb_codeworks/datasets/PMBB-2.0_exome_GL_norm/plink/PMBB-Release-2020-2.0_genetic_exome_GL_norm"
    group_file_prefix = "/project/pmbb_codeworks/datasets/New_VEP_Annotations_2.0/SAIGE_Sets/subset."

    // this is for getting gene-based coordinates for plotting
    // also wrapped in the docker container
    gene_location_file = "/app/NCBI.gene.loc"
    // three-column .csv file: PHENO, DESCRIPTION, CATEGORY
    pheno_descriptions_file = "/project/pmbb_codeworks/datasets/Ontology_Things/phecode_descriptions_categories.csv"

    // P-Value Threshold for Summarizing Results at the End
    p_cutoff_summarize = 0.00001
    case_control_filter = 5

    // Plink parameters for SAIGE Step 1 Input QC which needs a small set of high-quality variants
    // Current defaults are recommended by GBMI analysis plan
    maf = 0.01
    geno = 0.01
    hwe = 1E-6

    // SAIGE-GENE Step 2 Parameters
    // Current defaults are recommended by BRAVA analysis plan
    min_maf = 0
    min_mac = 0.5
    grouptest_maf = "0.0001,0.001,0.01"
    grouptest_annotation = "pLoF,damaging_missense,other_missense,synonymous,pLoF;damaging_missense,pLoF;damaging_missense;other_missense;synonymous"
    use_firth = "TRUE"
    firth_cutoff = 0.1
    LOCO = "FALSE"

    // Dictionary (Map) with default SAIGE Region column names mapped to new ones
    regions_col_names = [
        Region: 'gene',
        Group: 'annot',
        max_MAF: 'max_maf',
        Pvalue: 'p_value',
        Pvalue_Burden: 'p_value_burden',
        BETA_Burden: 'beta_burden',
        SE_Burden: 'se_burden',
        Pvalue_SKAT: 'p_value_skat',
        MAC: 'mac',
        MAC_case: 'mac_case',
        MAC_control: 'mac_control',
        Number_rare: 'rare_var_count',
        Number_ultra_rare: 'ultrarare_var_count'
    ]

    // Dictionary (Map) with default SAIGE SingleAssoc column names mapped to new ones
    singles_col_names = [
        CHR: 'chromosome',
        POS: 'base_pair_location',
        MarkerID: 'variant_id',
        Allele1: 'other_allele',
        Allele2: 'effect_allele',
        AC_Allele2: 'effect_allele_count',
        AF_Allele2: 'effect_allele_frequency',
        MissingRate: 'missing_rate',
        BETA: 'beta',
        SE: 'standard_error',
        Tstat: 't_statistic',
        var: 'variance',
        'p.value': 'p_value',
        'p.value.NA': 'p_value_na',
        'Is.SPA': 'is_spa_test',
        AF_case: 'allele_freq_case',
        AF_ctrl: 'allele_freq_ctrl',
        N_case: 'n_case',
        N_ctrl: 'n_ctrl',
        N_case_hom: 'n_case_hom',
        N_case_het: 'n_case_het',
        N_ctrl_hom: 'n_ctrl_hom',
        N_ctrl_het: 'n_ctrl_het',
        N: 'n'
    ]

}